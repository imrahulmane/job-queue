services:
  postgres:
    image: postgres:15-alpine
    container_name: job_queue_postgres_dev
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - job_queue_dev_network

  api:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    container_name: job_queue_api_dev
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_URL: ${DB_URL}
      ENVIRONMENT: ${ENVIRONMENT}
      POLL_INTERVAL: ${POLL_INTERVAL}
      MAX_POLL_INTERVAL: ${MAX_POLL_INTERVAL}
      BACKOFF_FACTOR: ${BACKOFF_FACTOR}
    volumes:
      - ../../app:/app/app:rw
      - ../../logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - job_queue_dev_network

  worker:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    restart: unless-stopped
    command: python -m app.worker_main
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_URL: ${DB_URL}
      ENVIRONMENT: ${ENVIRONMENT}
      POLL_INTERVAL: ${POLL_INTERVAL}
      MAX_POLL_INTERVAL: ${MAX_POLL_INTERVAL}
      BACKOFF_FACTOR: ${BACKOFF_FACTOR}
      MAX_CONCURRENT_JOBS: ${MAX_CONCURRENT_JOBS}
      WORKER_QUEUES: ${WORKER_QUEUES}
    volumes:
      - ../../app:/app/app:rw
      - ../../logs:/app/logs
      - /tmp:/tmp
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - job_queue_dev_network

networks:
  job_queue_dev_network:
    driver: bridge
    name: job_queue_dev_network

volumes:
  postgres_data_dev:
    driver: local
    name: job_queue_postgres_data_dev